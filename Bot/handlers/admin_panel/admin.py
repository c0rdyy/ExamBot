from aiogram import Router, F
from aiogram.types import Message, FSInputFile, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter

from handlers.admin_panel.admin_panel_states import AddQuestionState, AdminPanelState
from keyboards.admin_panel_keyboard import admin_panel_main_menu, admin_panel_cancel
from keyboards.test import user_main_menu_keyboard, admin_main_menu_keyboard
from database.requests import add_question
from config.settings import ADMIN_IDS

admin_router = Router()

@admin_router.message(F.text == "/admin")
@admin_router.message(F.text == "üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def handle_admin(message: Message, state: FSMContext):
    await message.delete()
    photo = FSInputFile("images/admin_panel.jpg")
    await message.answer_photo(text="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
                               photo=photo,
                               reply_markup=admin_panel_main_menu)
    await state.set_state(AdminPanelState.active)

# üìã –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã
@admin_router.callback_query(F.data == "all_questions")
async def handle_all_questions(callback: CallbackQuery):
    await callback.message.edit_text("üìã –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")

# ‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å
@admin_router.callback_query(F.data == "add_question", AdminPanelState.active)
async def handle_add_question(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.delete()
    msg = await callback.message.answer(
        "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞:", 
        reply_markup=admin_panel_cancel
    )
    await state.update_data(msg_id=msg.message_id, options=[])
    await state.set_state(AddQuestionState.text)

@admin_router.message(AddQuestionState.text)
async def process_question_text(message: Message, state: FSMContext):
    await state.update_data(text=message.text)
    await message.answer("üìå –í–≤–µ–¥–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ `;`\n\n–ü—Ä–∏–º–µ—Ä: Python; Java; C++; Pascal")
    await state.set_state(AddQuestionState.options)

@admin_router.message(AddQuestionState.options)
async def process_question_options(message: Message, state: FSMContext):
    options = [opt.strip() for opt in message.text.split(";") if opt.strip()]
    if len(options) < 2:
        await message.answer("‚ùó –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º—É–º 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞.")
        return

    await state.update_data(options=options)
    await message.answer(f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ. –í–∞—Ä–∏–∞–Ω—Ç–æ–≤: {len(options)}\n"
                         f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (1‚Äì{len(options)}):")
    await state.set_state(AddQuestionState.correct_index)

@admin_router.message(AddQuestionState.correct_index)
async def process_correct_index(message: Message, state: FSMContext):
    data = await state.get_data()
    try:
        idx = int(message.text) - 1
        if not 0 <= idx < len(data["options"]):
            raise ValueError
    except ValueError:
        await message.answer("‚ùó –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –æ—Ç–≤–µ—Ç–∞.")
        return

    await state.update_data(correct_index=idx)
    await message.answer("üß© –í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: `easy`, `medium`, `hard`")
    await state.set_state(AddQuestionState.difficulty)

@admin_router.message(AddQuestionState.difficulty)
async def process_difficulty(message: Message, state: FSMContext):
    diff = message.text.strip().lower()
    if diff not in ["easy", "medium", "hard"]:
        await message.answer("‚ùó –í–≤–µ–¥–∏—Ç–µ: `easy`, `medium` –∏–ª–∏ `hard`")
        return

    data = await state.update_data(difficulty=diff)
    data = await state.get_data()

    await add_question(
        text=data["text"],
        options=data["options"],
        correct_index=data["correct_index"],
        difficulty=data["difficulty"]
    )

    await message.answer("‚úÖ –í–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.clear()

# üóë –£–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å
@admin_router.callback_query(F.data == "delete_question")
async def handle_delete_question(callback: CallbackQuery):
    await callback.message.edit_text("üóë –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")

# ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å
@admin_router.callback_query(F.data == "edit_question")
async def handle_edit_question(callback: CallbackQuery):
    await callback.message.edit_text("‚úèÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

# üë§ –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∞
@admin_router.callback_query(F.data == "create_admin")
async def handle_create_admin(callback: CallbackQuery):
    await callback.message.edit_text("üë§ –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º")

@admin_router.callback_query(F.data == "back_to_main_menu", AdminPanelState.active)
async def hande_go_to_main_menu(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await callback.answer()

    photo = FSInputFile("images/Main_menu.png")
    text = "‚öôÔ∏è <b>–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!</b>"

    if callback.from_user.id in ADMIN_IDS:
        keyboard = admin_main_menu_keyboard()
    else:
        keyboard = user_main_menu_keyboard()
    await callback.message.answer_photo(
        photo=photo, 
        caption=text, 
        reply_markup=keyboard, 
        parse_mode='HTML')
    await state.clear()

@admin_router.callback_query(F.data == "cancel")
async def handle_add_question(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    photo = FSInputFile("images/admin_panel.jpg")
    await callback.message.answer_photo(text="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
                               photo=photo,
                               reply_markup=admin_panel_main_menu)
    await state.set_state(AdminPanelState.active)