from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters.command import Command

from config.admin_ids import ADMIN_IDS
from keyboards.test import *

start_router = Router()

@start_router.message(F.text == "/start")
async def cmd_start(message: Message):
    if message.from_user.id in ADMIN_IDS:
        keyboard = admin_main_menu_keyboard()
    else:
        keyboard = user_main_menu_keyboard()

    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@start_router.message(F.text == "üß† –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")
async def handle_test(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ç–µ—Å—Ç–∞:")

@start_router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def handle_profile(message: Message):
    await message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:")

@start_router.message(F.text == "üèÜ –†–µ–π—Ç–∏–Ω–≥")
async def handle_rating(message: Message):
    await message.answer("–¢–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥:")

@start_router.message(F.text == "üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def handle_admin(message: Message):
    await message.answer("–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")

@start_router.message(F.text == "/help")
@start_router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def handle_help(message: Message):
    help_text = (
        "‚ÑπÔ∏è *–û –±–æ—Ç–µ:*\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –ø–æ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é (–û–û–ü).\n\n"
        "üìå *–ö–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏:*\n"
        "/start - p–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.\n"
        "/test ‚Äî –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç.\n"
        "/profile ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å.\n"
        "/rate ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
        "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.\n\n"
    )
    await message.answer(help_text, parse_mode="Markdown")

